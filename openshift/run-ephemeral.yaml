apiVersion: v1
kind: Template
labels:
  app: csdexporter
  template: csdexporter-ephemeral
metadata:
  annotations:
    description: Cassandra exporter - ephemeral
      see https://github.com/Worteks/docker-csdexporter
    iconClass: icon-openshift
    openshift.io/display-name: Cassandra Exporter
    openshift.io/provider-display-name: Worteks
    openshift.io/support-url: https://www.worteks.com
    tags: csdexporter
  name: csdexporter-ephemeral
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      name: cassandra-${FRONTNAME}
    name: cassandra-${FRONTNAME}
  spec:
    replicas: 1
    selector:
      name: cassandra-${FRONTNAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: cassandra-${FRONTNAME}
      spec:
        dnsPolicy: ClusterFirst
        containers:
        - env:
          - name: CASSANDRA_CLUSTER_NAME
            value: mycluster
          - name: CASSANDRA_DC
            value: DC1
          - name: CASSANDRA_RACK
            value: RACK1
          - name: HEAP_NEWSIZE
            value: ${CASSANDRA_HEAP_NEWSIZE}
          - name: MAX_HEAP_SIZE
            value: ${CASSANDRA_MAX_HEAP_SIZE}
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 20
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            tcpSocket:
              port: 9042
          name: cassandra
          ports:
          - name: cql-port
            containerPort: 9042
          - name: thift-port
            containerPort: 9160
          - name:  intra-node
            containerPort: 7000
          - name: tls-intra
            containerPort: 7001
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - "-i"
              - "-c"
              - /is-ready.sh
            initialDelaySeconds: 40
            periodSeconds: 30
            timeoutSeconds: 20
          resources:
            limits:
              cpu: "${CASSANDRA_CPU_LIMIT}"
              memory: "${CASSANDRA_MEMORY_LIMIT}"
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - name: data
            mountPath: /var/lib/cassandra/data
        - image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 20
            tcpSocket:
              port: 9113
            timeoutSeconds: 3
          name: exporter
          ports:
          - containerPort: 9113
            protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            tcpSocket:
              port: 9113
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "${EXPORTER_CPU_LIMIT}"
              memory: "${EXPORTER_MEMORY_LIMIT}"
        restartPolicy: Always
        volumes:
        - emptyDir: {}
          name: data
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - cassandra
        from:
          kind: ImageStreamTag
          name: ${CASSANDRA_IMAGESTREAM_TAG}
        lastTriggeredImage: ''
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - exporter
        from:
          kind: ImageStreamTag
          name: csdexporter-${CASSANDRA_EXPORTER_IMAGE_FRONTNAME}:${CASSANDRA_EXPORTER_IMAGE_TAG}
        lastTriggeredImage: ''
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: cassandra-${FRONTNAME}
  spec:
    ports:
    - name: cql
      protocol: TCP
      port: 9042
      targetPort: 9042
    - name: thrift
      protocol: TCP
      port: 9160
      targetPort: 9160
    - name: intra
      protocol: TCP
      port: 7000
      targetPort: 7000
    - name: tls-intra
      protocol: TCP
      port: 7001
      targetPort: 7001
    selector:
      name: cassandra-${FRONTNAME}
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes Cassandra Prometheus Exporter
    labels:
      ${PROMETHEUS_SERVICE_SELECTOR}: ${PROMETHEUS_SERVICE_MATCH}
    name: csdexporter-${FRONTNAME}
  spec:
    ports:
    - name: exporter
      port: 9113
      targetPort: 9113
    selector:
      name: cassandra-${FRONTNAME}
    type: ClusterIP
parameters:
- name: CASSANDRA_CPU_LIMIT
  description: Maximum amount of CPU an Cassandra container can use
  displayName: Cassandra CPU Limit
  required: true
  value: 400m
- name: CASSANDRA_EXPORTER_IMAGE_FRONTNAME
  description: The name assigned to ImageStream object defined in corresponding template
  displayName: Name
  required: true
  value: wsweet
- name: CASSANDRA_EXPORTER_IMAGE_TAG
  description: The ImageStreamTag we should pull images from
  displayName: Tag
  required: true
  value: master
- name: CASSANDRA_HEAP_NEWSIZE
  value: 64M
- name: CASSANDRA_IMAGESTREAM_TAG
  value: cassandra-wsweet:master
- name: CASSANDRA_MAX_HEAP_SIZE
  value: 256M
- name: CASSANDRA_MEMORY_LIMIT
  description: Maximum amount of memory an Cassandra container can use
  displayName: Cassandra Memory Limit
  required: true
  value: 4Gi
- name: EXPORTER_CPU_LIMIT
  description: Maximum amount of CPU an exporter container can use
  displayName: Exporters CPU Limit
  required: true
  value: 50m
- name: EXPORTER_MEMORY_LIMIT
  description: Maximum amount of Memory an exporter container can use
  displayName: Exporters Memory Limit
  required: true
  value: 96Mi
- name: FRONTNAME
  description: The name identifier assigned to objects defined in this template
  displayName: Name
  required: true
  value: demo
- name: PROMETHEUS_SERVICE_SELECTOR
  description: Prometheus Selector (key)
  displayName: Prometheus Service Selector Key
  required: true
  value: prometheus
- name: PROMETHEUS_SERVICE_MATCH
  description: Prometheus Selector (value)
  displayName: Prometheus Service Selector Value
  required: true
  value: scrape-me
